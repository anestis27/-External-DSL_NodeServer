/*
 * generated by Xtext 2.12.0
 */
package org.xtext.example.mydsl.scoping

import org.eclipse.emf.ecore.EObject
import org.eclipse.emf.ecore.EReference
import org.xtext.example.mydsl.myDsl.EntityType
import org.xtext.example.mydsl.myDsl.MyDslPackage.Literals
import org.eclipse.xtext.EcoreUtil2
import org.eclipse.xtext.scoping.Scopes
import org.xtext.example.mydsl.myDsl.Entity

/**
 * This class contains custom scoping description.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#scoping
 * on how and when to use it.
 */
class MyDslScopeProvider extends AbstractMyDslScopeProvider {
	/*
	override getScope(EObject context, EReference reference) {
		if(context instanceof EntityType && reference==Literals.ENTITY_TYPE__ENTITY) {
			System.out.println("EntityType")
			val rootElement = EcoreUtil2.getRootContainer(context)
			val candidates = EcoreUtil2.getAllContentsOfType(rootElement, Entity)
	        return Scopes.scopeFor(candidates)
		}		
		return super.getScope(context, reference)
	}  */
}
